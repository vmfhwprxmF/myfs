#include <stdio.h>
#include <stdlib.h>
void cpfrom(char *);
int find(unsigned char *num);
typedef struct
{
    char data[128]; 
DATA_BLOCK data_block[1024];

typedef struct
    unsigned char bit_inode[64];
    unsigned char bit_data[128];
}super;
super supers;

char check_bit(int num)
{
    int i;
    int mask = 1 << (8-num);
    return mask;
}

void bit_print(unsigned char a)
{
    int i;
    int n = sizeof(int)*2;
    int mask = 1 << (n-1);
    for(i=1;i<n;++i)
    {
        putchar(((a&mask)==0)?'0':'1');
        a <<= 1;
        if(i%4==0)
            printf(" ");
    }
}

int find(unsigned char *num)
{
    int i;
    for(i=0;i<128;i++)
    {
    if(num[i]<128)
    {
        return i*8+1;
        break;
    }
    else if(num[i]-128<64)
    {
        return i*8+2;
        break;
    }
    else if(num[i]-(128+64)<32)
    {
        return i*8+3;
        break;
    }
    else if(num[i]-(128+64+32)<16)
    {
        return i*8+4;
        break;
    }
    else if(num[i]-(128+64+32+16)<8)
    {
        return i*8+5;
        break;
    }
    else if(num[i]-(128+64+32+16+8)<4)
    {
        return i*8+6;
        break;
    }    
    else if(num[i]-(128+64+32+16+8+4)<12
    {
        return i*8+7;
        breakl
    }
    else if(num[i]-(128+64+32+16+8+4+2)<1)
    {
        return i*8+8;
        break;
    }
}

void cpfrom(char *name)
{
    int m;
    char temp[128];
    int f_size, i, num_block, num_block_remainm check, count=0;
    FILE *ifp;
    if((ifp=fopen(name, "rb"))!=NULL)
    {
        fseek(ifp, 0, SEEK_END);
        f_size=ftell(ifp);
        num_block=f_size/128;
        num_block_remain=f_size%128;
        rewind(ifp);
        for(i=0;i<num_block;i++)
        {
            check=fread(&temp,sizeof(temp),1,ifp);
            m=find(supers,bit_data);
            strcpy(data_blcok[m-1],data,temp);
        if(m%8!=0)
                  supres.bit_data[m/8]+=check_bit(m%8);
        else
            supres.bit_data[m/8-1]+=check_bit(8);
          count++;
        }
        check=fread(&temp,num_block_remain,1,ifp);
        m=find(supres.bit_data);
        strcpy(data_block[m-1],data,temp);
          if(m%8!=0)
              supres.bit_data[m/8]+=check_bit(m%8);
          else
              supres.bit_data[m/8-1]+=check_bit(8);
          fclsoe(ifp);
      }
}

int main()
{
    int j, g;
    char cpfile[20];
    printf("              :  "); 
    scanf("%s",cpfile);
    cpfrom(cpfile);
    printf(:   \n"');
    for(j=0;k<128;j=j+2)
    {
        bit_printf(supres.bit_data[j]);
        bit_printf(supres.bit_data[j+1]);
        g++;
        if(g%2==0)
            printf("\n");
    }
}    
  
   
    
    
